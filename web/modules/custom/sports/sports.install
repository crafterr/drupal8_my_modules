<?php

/**
 * @file
 */

/**
 * Implements hook_schema().
 */
function sports_schema() {
  $schema = [];
  $schema['teams'] = [
    'description' => 'The table that holds team data.',
    'fields' => [
      'id' => [
        'description' => 'The primary identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'name' => [
        'description' => 'The team name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'description' => [
        'description' => 'The team description.',
        'type' => 'text',
        'size' => 'normal',
      ],
      'status' => [
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'length' => 1,
        'default' => 1,
      ],
      'created' => [
        'description' => 'The Unix timestamp when the node was created.',
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['players'] = [
    'description' => 'The table that holds player data.',
    'fields' => [
      'id' => [
        'description' => 'The primary identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'team_id' => [
        'description' => 'The ID of the team it belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'name' => [
        'description' => 'The player name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'data' => [
        'description' => 'Arbitrary data about the player.',
        'type' => 'blob',
        'size' => 'big',
      ],
    ],
    'primary key' => ['id'],
    'foreign keys' => [
      'fk_players_team_id' => [
        'table' => 'teams', 'columns' => ['team_id' => 'id']
      ],
    ],
  ];
  return $schema;
}

/**
 * @param $sandbox
 * change description and length column ip
 */
function sports_update_8001(&$sandbox) {

  $field = [
    'description' => 'The ID of the team it belongs to.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
  ];

  $schema = $database = \Drupal::database()->schema();
  $schema->changeField('players', 'team_id', 'team_id',$field);
}

function sports_update_8002(&$sandbox) {
  $schema = \Drupal::database()->schema();
  $schema->addField('teams', 'status', [
    'type' => 'int',
    'not null' => TRUE,
    'size' => 'tiny',
    'default' => 1,
    'length' => 1,
  ]);
}

function sports_update_8003(&$sandbox) {
  $schema = \Drupal::database()->schema();
  $schema->addField('teams', 'created', [
    'description' => 'The Unix timestamp when the node was created.',
    'type' => 'int',
    'unsigned' => true,
    'not null' => true,
    'default' => 0,
  ]);
}

/**
 * Update all the players to mark them as retired.
 */
function sports_update_8004(&$sandbox) {
  $database = \Drupal::database();
  if (empty($sandbox)) {
    $results = $database->query("SELECT id FROM {players}")->fetchAllAssoc('id');
    $sandbox['progress'] = 0;
    $sandbox['ids'] = array_keys($results);
    $sandbox['max'] = count($results);
  }

  $id = $sandbox['ids'] ? array_shift($sandbox['ids']) : NULL;

  $player = $database->query("SELECT * FROM {players} WHERE id = :id", [':id' => $id])->fetch();
  $data = $player->data ? unserialize($player->data) : [];
  $data['retired'] = TRUE;
  $database->update('players')
    ->fields(['data' => serialize($data)])
    ->condition('id', $id)
    ->execute();
  $sandbox['progress']++;
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
}

/**
 * Update all the players to mark them as done.
 */
function sports_update_8006(&$sandbox) {
  $database = \Drupal::database();
  $results =   Drupal\sports\PlayerStorage::getAll();
  foreach ($results as $result) {
    $data = $result->data ? unserialize($result->data) : [];
    $data['done'] = TRUE;
    $data['retired'] = TRUE;
    $serialize_data = ['data' => serialize($data)];
    \Drupal\sports\PlayerStorage::update($result->id,$serialize_data);

  }
}